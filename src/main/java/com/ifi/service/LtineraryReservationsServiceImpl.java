/*
 * Created on 2018-09-26 ( Date ISO 2018-09-26 - Time 17:17:37 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.ifi.service;


import java.util.List;

import javax.transaction.Transactional;

import com.ifi.entity.LtineraryReservations;
import com.ifi.repository.LtineraryReservationsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class LtineraryReservationsServiceImpl implements LtineraryReservationsService {

	@Autowired
	private LtineraryReservationsRepository ltineraryReservationsRepository;

	@Override
	public LtineraryReservations getOne(Integer reservationId) {
		return ltineraryReservationsRepository.getOne(reservationId);
	}

	@Override
	public Boolean delete(Integer reservationId) {
		if (ltineraryReservationsRepository.getOne(reservationId) != null) {
			ltineraryReservationsRepository.deleteById(reservationId);
			return true;
		}
		return false;
	}

	@Override
	public LtineraryReservations create(LtineraryReservations ltineraryReservations) {
		return ltineraryReservationsRepository.save(ltineraryReservations);
	}

	@Override
	public LtineraryReservations update(LtineraryReservations ltineraryReservationsToUpdate) {
						LtineraryReservations ltineraryReservations = ltineraryReservationsRepository.getOne(ltineraryReservationsToUpdate.getReservationId());
																																		
				if(ltineraryReservationsToUpdate.getAgentId() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getPassengerId() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getReservatiionStatusCode() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getTicketTypeCode() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getTravelClassCode() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getDateReservationMade() !=null) {
			
		}
				if(ltineraryReservationsToUpdate.getNumberInParty() !=null) {
			
		}
				return ltineraryReservationsRepository.save(ltineraryReservations);
	}

	@Override
	public Boolean exist(LtineraryReservations ltineraryReservations) {
						return ltineraryReservationsRepository.existsById(ltineraryReservations.getReservationId());
																																	}

	@Override
	public List<LtineraryReservations> findAll() {
		return ltineraryReservationsRepository.findAll();
	}

}
